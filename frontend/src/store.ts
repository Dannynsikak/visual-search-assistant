import { configureStore, createSlice } from "@reduxjs/toolkit";
import searchReducer from "./slice/searchSlice";

// Define the shape of your app's state
type ModeState = {
  mode: "light" | "dark";
};

// Create a slice for the mode state
const modeSlice = createSlice({
  name: "mode",
  initialState: {
    mode:
      (localStorage.getItem("mode") as "light" | "dark") ||
      (window.matchMedia?.("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light"),
  } as ModeState,
  reducers: {
    switchMode(state) {
      const newMode = state.mode === "dark" ? "light" : "dark";
      localStorage.setItem("mode", newMode);
      state.mode = newMode;
    },
  },
});

// Export actions generated by createSlice
export const { switchMode } = modeSlice.actions;

const store = configureStore({
  reducer: {
    search: searchReducer,
    mode: modeSlice.reducer,
  },
});

export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;

export default store;
